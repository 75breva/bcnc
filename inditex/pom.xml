<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.bncn</groupId>
	<artifactId>inditex</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>inditex</name>
	<description>Ejercicio prueba Inditex</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<kafka.version>3.5.1</kafka.version>
		<spring-kafka.version>3.2.4</spring-kafka.version>
	</properties>
	<dependencies>
		<!-- Dependencia de Spring Kafka -->
		<!-- Esta dependencia es la que proporciona el KafkaTemplate, el KafkaListener, y la configuración automática de Kafka en Spring Boot.-->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<version>3.3.1</version> <!-- el segundo numero 3 igual a la versión compatible con tu Spring Boot -->
		</dependency>

		<dependency> <!-- Si no se pone no inyecta bien los repos en los servicios-->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>0.2.6</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.8.0</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>javax.persistence-api</artifactId>
			<version>2.2</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>openapi-generator-cli</artifactId>
			<version>7.7.0</version>
			<scope>provided</scope>
		</dependency>


		<!-- Dependencia para javax.annotation -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>1.3.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>6.2.7.Final</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId> <!-- manejo de archivos, flujos de entrada y salida, y operaciones relacionadas con la I/O. -->
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>

<!--		<dependency> &lt;!&ndash; Al usar version java superior a la 8 me da problemas el endpoint con parametros query&ndash;&gt;-->
<!--			<groupId>javax.servlet</groupId>-->
<!--			<artifactId>javax.servlet-api</artifactId>-->
<!--			<version>4.0.1</version>-->
<!--		</dependency>-->


		<!--		Me pide usar jakarta.servlet en vez de javax -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>6.1.0</version> <!-- Asegúrate de usar la versión adecuada -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.24</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-javadoc-plugin</artifactId>
			<version>3.5.0</version>
		</dependency>


		<!--		Me generaba bien los test pero me daba unos errores al inicio el cual no queria ver y añado estas 3 dependencias-->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.23.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.23.1</version>
		</dependency>
		<dependency>
			<groupId>io.projectreactor.netty</groupId>
			<artifactId>reactor-netty</artifactId>
			<version>1.1.21</version>
		</dependency>

	</dependencies>
	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
		</repository>
	</repositories>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>7.10.0</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/api.yml</inputSpec>
							<generatorName>spring</generatorName>
							<apiPackage>com.bncn.inditex.api</apiPackage>
							<modelPackage>com.bncn.inditex.dto</modelPackage>
							<supportingFilesToGenerate>
								ApiUtil.java
							</supportingFilesToGenerate>
							<configOptions>
								<delegatePattern>false</delegatePattern> <!-- Para que no genere una capa delegado intermedia en la zona del controller-->
								<interfaceOnly>false</interfaceOnly> <!-- Me escriba la imterfaz de la implementacion del controller-->
								<returnSuccessCode>true</returnSuccessCode>
								<useJakartaEe>true</useJakartaEe> <!-- Fundamental para indicarle que en la clase ApiUtil.java, use jakarta.servlet-api en vez de javax.servlet-api. He tenido que cambiar la dependencia de javax a jakarta tambien. Todo es por las versiones de spring 3.x y kafka tan modernas-->
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
